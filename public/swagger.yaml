openapi: 3.0.0
info:
  title: Pudding API
  description: Pudidng API
  version: 1.0.0
servers:
  - url: http://localhost:8080/
    description: My API
tags:
  - name: category
    description: Category about projects
  - name: project
    description: Access to project
  - name: user
    description: Operations about user
  - name: cart
    description: Cart for user
paths:
  /api/auth/github:
    get:
      tags:
        - user
      summary: github login
      operationId: getLogIn
      responses:
        default:
          description: successful operation
  /api/auth/github/callback:
    post:
      tags:
        - user
      summary: github login callback
      operationId: getLogIn callback
      responses:
        default:
          description: successful operation'
        "400":
          description: Invalid userId supplied
        "404":
          description: User not found
        "5XX":
          description: Unexpected error.
  /api/auth/logout:
    get:
      tags:
        - user
      summary: github logout
      operationId: getLogOut
      responses:
        default:
          description: successful operation'
  /api/category:
    get:
      tags:
        - category
      summary: Get category list
      operationId: getCategoryList
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryListArray"
            application/xml:
              schema:
                $ref: "#/components/schemas/CategoryListArray"
        "404":
          description: Category not found
        "5XX":
          description: Unexpected error.
  /api/user:
    get:
      tags:
        - user
      summary: get user
      operationId: getUser
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /api/user/jjim:
    post:
      tags:
        - user
      summary: push project in user jjim list
      operationId: addJjim
      parameters:
        - name: projectId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserJjimArray"
        "400":
          description: Invalid userId supplied
        "404":
          description: User not found
        "5XX":
          description: Unexpected error.
    get:
      tags:
        - user
      summary: Get user jjim list by user id
      operationId: getUserJjimById
      parameters:
        - name: userId
          in: path
          description: The user id that needs to be fetched.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserJjimArray"
        "400":
          description: Invalid userId supplied
        "404":
          description: User not found
        "5XX":
          description: Unexpected error.
    delete:
      tags:
        - user
      summary: remove project in user jjim list
      operationId: deleteJjim
      parameters:
        - name: projectId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserJjimArray"
  /api/user/carts:
    post:
      tags:
        - cart
      summary: push project in cart
      operationId: createCartAPI
      parameters:
        - name: projectId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartListArray"
    get:
      tags:
        - cart
      summary: Get project list in cart
      operationId: getProjectListInCartAPI
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartListArray"
    delete:
      tags:
        - cart
      summary: remove project in cart
      operationId: removeCartAPI
      parameters:
        - name: projectId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartListArray"
    put:
      tags:
        - cart
      summary: change point of the project in cart
      operationId: modifyCartAPI
      parameters:
        - name: projectId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: point
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartListArray"
  /api/user/investment:
    get:
      tags:
        - user
      summary: Get user investment list by user id
      operationId: getInvestment
      parameters:
        - name: userId
          in: path
          description: The user id that needs to be fetched.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInvestmentArray"
            application/xml:
              schema:
                $ref: "#/components/schemas/UserInvestmentArray"
        "400":
          description: Invalid userId supplied
        "404":
          description: User not found
        "5XX":
          description: Unexpected error.
    post:
      tags:
        - user
      summary: push project in investment list
      operationId: addInvestment
      parameters:
        - name: projectId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInvestmentArray"
  /api/project/schedule:
    get:
      tags:
        - project
      summary: Get schedule project list
      operationId: getScheduleProjectList
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleProjectListArray"
        "404":
          description: Project not found
        "5XX":
          description: Unexpected error.
  /api/project/success:
    get:
      tags:
        - project
      summary: Get success project list
      operationId: getSuccessProjectList
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessProjectListArray"
        "404":
          description: Project not found
        "5XX":
          description: Unexpected error.
  /api/project/popular:
    get:
      tags:
        - project
      summary: Get popular project list
      operationId: getPopularProjectList
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PopularProjectListArray"
        "404":
          description: Project not found
        "5XX":
          description: Unexpected error.
  /api/serach:
    post:
      tags:
        - project
      summary: serach project macthing keyword
      operationId: elasticsearh
      parameters:
        - name: keyword
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectListArray"
        "5XX":
          description: Unexpected error.
components:
  schemas:
    User:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        language:
          type: string
        point:
          type: integer
          format: int64
        photo:
          type: string
      xml:
        name: User
    Project:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        company:
          type: string
        goal_money:
          type: integer
          format: int64
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        category:
          $ref: "#/components/schemas/Category"
        img:
          type: string
      xml:
        name: Project
    Category:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        key:
          type: string
        label:
          type: string
      xml:
        name: Category
    Jjim:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        project_id:
          $ref: "#/components/schemas/Project"
        user_id:
          $ref: "#/components/schemas/User"
    Investment:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        money:
          type: integer
          format: int64
        project_id:
          $ref: "#/components/schemas/Project"
        user_id:
          $ref: "#/components/schemas/User"
    UserInvestmentArray:
      required:
        - items
      type: array
      items:
        $ref: "#/components/schemas/Investment"
    UserJjimArray:
      required:
        - items
      type: array
      items:
        $ref: "#/components/schemas/Jjim"
    ProjectListArray:
      required:
        - items
      type: array
      items:
        $ref: "#/components/schemas/Project"
    CategoryListArray:
      required:
        - items
      type: array
      items:
        $ref: "#/components/schemas/Category"
    PopularProjectListArray:
      required:
        - items
      type: array
      items:
        $ref: "#/components/schemas/Project"
    CartListArray:
      required:
        - items
      type: array
      items:
        $ref: "#/components/schemas/Cart"
    Cart:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        money:
          type: integer
          format: int64
        project_id:
          $ref: "#/components/schemas/Project"
        user_id:
          $ref: "#/components/schemas/User"
